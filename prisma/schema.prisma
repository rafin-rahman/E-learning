// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  firstName    String
  lastName     String
  email        String    @unique
  telephone    String?
  password     String
  profileImage String?
  role         String[]
  permissions  String[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  session      Session[]
}

model Student {
  id          String          @id @default(uuid())
  status      String          @default("ACTIVE")
  firstName   String
  lastName    String
  email       String          @unique
  telephone   String
  password    String
  role        String[]
  permissions String[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  profile     StudentProfile?
}

model StudentProfile {
  id                         String   @id @default(uuid())
  status                     String   @default("NEW_ACCOUNT")
  idDocument                 String?
  qualificationDocument      String?
  englishLanguageCertificate String?
  cvDocument                 String?
  personalStatementDocument  String?
  profileImage               String?
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
  student                    Student  @relation(fields: [studentId], references: [id])
  studentId                  String   @unique
}

model Session {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [id], references: [id])
  userId    String
  token     String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id                String           @id @default(uuid())
  title             String
  description       String
  image             String
  price             Float
  discountedPrice   Float?
  duration          String
  courseType        String
  courseCode        String
  courseLevel       CourseLevel      @relation(fields: [courseLevelId], references: [id])
  courseLevelId     String
  courseSubject     CourseSubject    @relation(fields: [courseSubjectId], references: [id])
  courseSubjectId   String
  deliveryPartner   DeliveryPartner? @relation(fields: [deliveryPartnerId], references: [id])
  deliveryPartnerId String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
}

model DeliveryPartner {
  id        String   @id @default(uuid())
  name      String
  logo      String
  phone     String
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Course    Course[]
}

model CourseSubject {
  id        String   @id @default(uuid())
  name      String
  Course    Course[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CourseLevel {
  id        String   @id @default(uuid())
  name      String
  Course    Course[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Course Subjects
// BUSINESS_AND_MANAGEMENT,
// ARTIFICIAL_INTELLIGENCE,
// CYBER_SECURITY,
// CONSTRUCTION_MANAGEMENT,
// NURSING,
// PGCE,
// PSYCHOLOGY,
// IT_AND_COMPUTER_SCIENCE,
// MARKETING,
// CRIMINOLOGY,
// HUMAN_RESOURCES,
// DISASTER_AND_EMERGENCY_MANAGEMENT,
// PUBLIC_HEALTH,
// ENGINEERING,
// HEALTHCARE,
// HUMANITIES,
// LEADERSHIP,
// DISASTER_AND_EMERGENCY_MANAGEMENT,
// CREATIVE_WRITING,
// ENVIRONMENTAL_SCIENCE,
// RENEWABLE_ENERGY

// USER ROLES
// ADMIN
// STUDENT
// COURSE_MANAGER
// SUPER_ADMIN
// LECTURER
// STUDENT_SUPPORT
// REGISTRY
// FINANCE
